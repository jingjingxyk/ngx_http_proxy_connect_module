
user  nginx;
worker_processes  auto;
worker_cpu_affinity auto;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  10240;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    gzip  on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 4 16k;
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg;
    server_tokens off;
    resolver  1.0.0.1 1.0.0.2 1.0.0.3 1.1.1.1 8.8.8.8 8.8.4.4 ;

    proxy_buffer_size  128k;
    proxy_buffers   32 32k;
    proxy_busy_buffers_size 128k;
    proxy_temp_file_write_size 128k;
    client_body_buffer_size 1024k;
    server_names_hash_bucket_size 256;
    client_max_body_size 500M;

    map_hash_bucket_size 256;


    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {

        # listen  443 ssl http2 default_server;

        listen 80 ;
        server_name  localhost;

        charset utf-8;

        access_log  logs/access.log  main;


        # dns resolver used by forward proxying
        # source code
        #  http://nginx.org/download/nginx-1.21.1.tar.gz
        #  https://github.com/chobits/ngx_http_proxy_connect_module.git

        # ssl curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
        # ssl https://ssl-config.mozilla.org/



        proxy_connect;
        #proxy_connect_allow            443 563;
        proxy_connect_allow            all;
        proxy_connect_connect_timeout  10s;
        proxy_connect_read_timeout     10s;
        proxy_connect_send_timeout     10s;
        location / {
             proxy_pass http://$host;
             proxy_set_header Host $host;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_reject_handshake on; #非服务器名称的 SSL 握手直接拒绝
        return 444;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 444;
    }

    # include /etc/nginx/conf.d/*.conf;

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

stream {
    log_format proxy '$remote_addr [$time_local] '
    '$protocol $status $bytes_sent $bytes_received '
    '$session_time "$upstream_addr" '
    '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log      logs/access.log  proxy;
    resolver  1.0.0.1 1.0.0.2 1.0.0.3 1.1.1.1 8.8.8.8 8.8.4.4 ;

    # 根据服务器名称选择上游：
    # https://nginx.org/en/docs/stream/ngx_stream_ssl_preread_module.html
    # 根据 SSL 协议版本选择上游：

    # tcp-udp-load-balancer
    # https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/

    map $ssl_preread_protocol $upstream_name {
         "TLSv1.3" $name;
          default   https_default;
    }

    map "$ssl_preread_server_name$ssl_preread_alpn_protocols" $name {
          default                                     https_default;

          # example
          #~http-proxy.xiaoshuogeng.com               https_default;
          #~http-proxy.xiaoshuogeng.comh2,http/1.1    https_default;

    }

    upstream https {
        server 127.0.0.1:443;
    }

    server {
        listen      8443 reuseport;
        proxy_pass  $upstream_name;
        ssl_preread on;
    }

   # include /etc/nginx/stream/*.conf;
}


