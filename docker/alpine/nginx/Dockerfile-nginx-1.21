FROM alpine:3.16

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories \
&& apk update && apk add  --no-cache ca-certificates \
gcc \
libc-dev \
make \
openssl-dev \
pcre-dev \
zlib-dev \
jansson-dev \
autoconf \
automake \
cmake \
libtool \
patch \
file \
util-linux \
git \
wget

ARG  PROXY_URL
ENV  http_proxy=$PROXY_URL
ENV  https_proxy=$PROXY_URL

RUN wget http://nginx.org/download/nginx-1.21.1.tar.gz

RUN tar -zxvf nginx-1.21.1.tar.gz

RUN git clone --depth=1 --progress https://github.com/chobits/ngx_http_proxy_connect_module.git
ENV  http_proxy=''
ENV  https_proxy=''




RUN addgroup -g 101 -S nginx \
&& adduser -S -D -H -u 101 -h /usr/local/nginx -s sbin/nologin -G nginx -g nginx nginx

WORKDIR /nginx-1.21.1
RUN patch -p1 < /ngx_http_proxy_connect_module/patch/proxy_connect_rewrite_102101.patch
RUN ./configure \
        --prefix=/usr/local/nginx \
        --sbin-path=/usr/local/nginx/nginx \
        --conf-path=/usr/local/nginx/etc/nginx.conf \
        --pid-path=/usr/local/nginx/nginx.pid \
        --with-http_ssl_module \
        --with-http_stub_status_module \
        --with-http_realip_module \
        --with-http_auth_request_module \
        --with-http_v2_module \
        --with-http_flv_module \
        --with-http_sub_module \
        --with-stream \
        --with-stream_ssl_preread_module \
        --with-stream_ssl_module \
        --with-threads \
        --add-module=/ngx_http_proxy_connect_module \
        &&  make -j `grep "processor" /proc/cpuinfo | sort -u | wc -l`  && make install

#        --with-pcre=../pcre-8.44 \
#        --with-zlib=../zlib-1.2.11 \

WORKDIR /
ENV PATH=$PATH:/usr/local/nginx/
RUN mkdir -p /usr/local/nginx/etc/conf.d/

ADD ./etc/nginx.conf /usr/local/nginx/etc/nginx.conf
ADD ./etc/conf.d/default.conf /usr/local/nginx/etc/conf.d/default.conf


FROM alpine:3.16

RUN test -f /etc/apk/repositories.save || cp -f /etc/apk/repositories /etc/apk/repositories.save
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories \
&&  apk update && apk add  --no-cache ca-certificates \
libc-dev \
openssl-dev \
pcre-dev \
zlib-dev \
jansson-dev \
make

# RUN apk add iproute2 procps  net-tools bind-tools nftables ipset ipvsadm tcpdump conntrack-tools

COPY --from=0 /usr/local/lib/  /usr/local/lib/
ENV PATH=$PATH:/usr/local/lib
WORKDIR /

COPY --from=0  /usr/local/nginx/  /usr/local/nginx/

RUN addgroup -g 101 -S nginx \
&& adduser -S -D -H -u 101 -h /usr/local/nginx -s sbin/nologin -G nginx -g nginx nginx

WORKDIR /
ENV PATH=$PATH:/usr/local/nginx/


RUN rm -rf /var/cache/apk/* \
&& rm -rf /root/.cache \
&& rm -rf /tmp/*

RUN ln -sf /dev/stdout /usr/local/nginx/logs/access.log && \
    ln -sf /dev/stderr /usr/local/nginx/logs/error.log


# /var/log/nginx/error.log
# /var/log/nginx/access.log
EXPOSE 80
EXPOSE 443

STOPSIGNAL SIGQUIT

CMD ["nginx", "-g", "daemon off;"]
